---
title: "Predator diets in Atlantis GOA"
author: "Alberto Rovellini"
format: 
  pdf:
    toc: false
execute:
  echo: false
  warning: false
  message: false
---

Bar plots refer to equilibrium diets in the model - average of the last 5 years of a simulation run. Only species that make up for \>5% of the diets are shown.

```{r}
library(readxl)
library(knitr)
library(kableExtra)

options(knitr.kable.NA = '')

# Read your Excel file
data <- read_excel("data/species_composition.xlsx")

# Create table with smaller font
kable(data, format = "latex", booktabs = TRUE,
    caption = "Species composition of the predator groups in Atlantis GOA") %>%
  kable_styling(
    latex_options = c("striped", "hold_position", "scale_down"),
    font_size = 12
  ) %>%
  column_spec(1:ncol(data), width = NULL)  # Let LaTeX handle the column widths automatically

```

\newpage

```{r setup}
#| include: false
library(tidyverse)
library(tidync)
library(ncdf4)
library(RColorBrewer)

# Load data
grps <- read.csv("data/GOA_Groups.csv", header = T)
pred_names <- grps %>% 
  filter(GroupType %in% c("MAMMAL","BIRD")) %>% 
  pull(Name)

# Diet check (realized diets)
diet <- read.table("data/outputGOA02123_testDietCheck.txt", sep = " ", header = T)

# Process diet data
diet_long <- diet %>%
  filter(Time < max(Time)) %>% # the last time steps is often incomplete
  mutate(Time = Time / 365) %>%
  filter(Time > 25) %>%
  group_by(Predator, Cohort) %>%
  summarise(across(KWT:DR, mean)) %>%
  ungroup() %>%
  pivot_longer(-c(Predator, Cohort), names_to = 'Prey', values_to = 'Prop') %>%
  left_join((grps %>% select(Code, Name, LongName)), by = c('Predator'='Code')) %>%
  rename(Predator_Name = Name, Predator_LongName = LongName) %>%
  select(-Predator) %>%
  left_join((grps %>% select(Code, Name, LongName)), by = c('Prey'='Code')) %>%
  rename(Prey_Name = Name, Prey_LongName = LongName) %>%
  select(Prop, Predator_Name, Predator_LongName, Cohort, Prey_Name, Prey_LongName) %>%
  filter(Prop > 0.001)

diet_long <- diet_long %>% filter(Predator_Name %in% pred_names)

# Function to get fill value for a variable
get_fill_value <- function(nc, var_name) {
  fill_value <- ncatt_get(nc, var_name, "_FillValue")
  
  if (fill_value$hasatt) {
    return(fill_value$value)
  } else {
    return(NA)
  }
}

# Function to create WAA table for a predator
create_waa_table <- function(pred_name) {
  nc <- nc_open("data/GOA_cb_summer.nc")
  varnames <- names(nc$var)
  
  resn_vars <- varnames[grepl(pred_name, varnames) & grepl("ResN", varnames)]
  structn_vars <- varnames[grepl(pred_name, varnames) & grepl("StructN", varnames)]
  
  vars_df <- data.frame("var" = c(resn_vars, structn_vars)) %>%
    mutate(
      cohort = as.numeric(str_extract(var, "\\d+")),
      var_short = str_extract(var, "(ResN|StructN)$"),
      Name = str_remove(var, paste0(cohort, "_", var_short))
    )
  
  vars_df$fillvalue <- sapply(vars_df$var, function(x) get_fill_value(nc, x))
  
  vars_df <- vars_df %>%
    mutate(weight_kg = fillvalue * 5.7 * 20 / 1000000)
  
  waa <- vars_df %>%
    group_by(Name, cohort) %>%
    summarise(waa = sum(weight_kg))
  
  # add age class size and work out age intervales
  waa <- waa %>%
    left_join(grps %>% select(Name, NumAgeClassSize)) %>%
    mutate(age_low = (cohort - 1) * (NumAgeClassSize) + 1,
           age_high = cohort * NumAgeClassSize) %>%
    mutate(Age = paste(age_low, age_high, sep = "â€“"))
  
  nc_close(nc)
  
  return(waa)
}
```

```{r function}
#| include: false
create_diet_plot <- function(pred) {
  
  n <- diet_long %>%
    filter(Predator_Name == pred) %>%
    pull(Prey_Name) %>%
    unique() %>%
    length()
  
  colors <- colorRampPalette(brewer.pal(9, "Set1"))(n)
  
  diet_long %>%
    filter(Predator_Name == pred) %>%
    ggplot(aes(x = Cohort+1, y = Prop * 100, fill = Prey_LongName)) +
    geom_bar(stat = 'identity', position = 'stack') +
    scale_fill_manual(values = colors) +
    scale_x_continuous(breaks = 1:10) +
    theme_bw() +
    labs(x = 'Cohort', 
         y = "Diet composition (%)", 
         fill = "Prey")
}
```

```{r}
#| results: asis
#| fig-height: 5
#| fig-width: 7
for(pred in pred_names) {
  
  pred_long <- grps %>% filter(Name == pred) %>% pull(LongName)
  
  cat("\n\n### ", pred_long, "\n\n")
  
  # Print diet plot
  print(create_diet_plot(pred))
  
  # Create and print WAA table
  waa_table <- create_waa_table(pred)
  
  # Ensure we have the right columns and print them
  waa_formatted <- waa_table %>% 
    ungroup() %>%  # Remove grouping
    select(cohort, Age, waa) %>% 
    arrange(cohort) %>%
    mutate(
      Cohort = cohort,
      Age = Age,
      `Weight (kg)` = round(waa, 2)
    ) %>%
    select(Cohort, Age, `Weight (kg)`)  # Select only the columns we want
    
  cat("\n\n**Weight at Age (kg)**\n\n")
  print(
    kable(waa_formatted,
          format = "pipe",
          align = c('c', 'c', 'r')  # Center cohort, right-align weights
    )
  )
  
  cat("\\newpage\n\n")
}
```
